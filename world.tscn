[gd_scene load_steps=5 format=3 uid="uid://dpu8u0h73r1dy"]

[sub_resource type="GDScript" id="GDScript_21mun"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_hnuiv"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_ge5q0"]

[sub_resource type="Environment" id="Environment_wbc6u"]

[node name="World" type="Node3D"]

[node name="Player" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
script = SubResource("GDScript_21mun")

[node name="PlayerCollision" type="CollisionShape3D" parent="Player"]
shape = SubResource("CapsuleShape3D_hnuiv")

[node name="PlayerMesh" type="MeshInstance3D" parent="Player"]
mesh = SubResource("CapsuleMesh_ge5q0")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_wbc6u")

[node name="TestFloor" type="CSGBox3D" parent="."]
size = Vector3(10, 0, 10)
